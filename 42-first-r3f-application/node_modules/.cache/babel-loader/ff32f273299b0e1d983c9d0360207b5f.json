{"ast":null,"code":"import { useState, useRef, useEffect, useMemo } from 'react';\nimport createDebounce from 'debounce';\n\nfunction useMeasure(_temp) {\n  let {\n    debounce,\n    scroll,\n    polyfill,\n    offsetSize\n  } = _temp === void 0 ? {\n    debounce: 0,\n    scroll: false,\n    offsetSize: false\n  } : _temp;\n  const ResizeObserver = polyfill || (typeof window === 'undefined' ? class ResizeObserver {} : window.ResizeObserver);\n\n  if (!ResizeObserver) {\n    throw new Error('This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills');\n  }\n\n  const [bounds, set] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    bottom: 0,\n    right: 0,\n    x: 0,\n    y: 0\n  }); // keep all state in a ref\n\n  const state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  }); // set actual debounce values early, so effects know if they should react accordingly\n\n  const scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  const resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null; // make sure to update state only as long as the component is truly mounted\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => void (mounted.current = false);\n  }); // memoize handlers, so event-listeners know when they should update\n\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\n    const callback = () => {\n      if (!state.current.element) return;\n      const {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      } = state.current.element.getBoundingClientRect();\n      const size = {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      };\n\n      if (state.current.element instanceof HTMLElement && offsetSize) {\n        size.height = state.current.element.offsetHeight;\n        size.width = state.current.element.offsetWidth;\n      }\n\n      Object.freeze(size);\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n    };\n\n    return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n  }, [set, offsetSize, scrollDebounce, resizeDebounce]); // cleanup current scroll-listeners / observers\n\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(element => element.removeEventListener('scroll', scrollChange, true));\n      state.current.scrollContainers = null;\n    }\n\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  } // add scroll-listeners / observers\n\n\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(scrollContainer => scrollContainer.addEventListener('scroll', scrollChange, {\n        capture: true,\n        passive: true\n      }));\n    }\n  } // the ref we expose to the user\n\n\n  const ref = node => {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  }; // add general event listeners\n\n\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange); // respond to changes that are relevant for the listeners\n\n  useEffect(() => {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]); // remove all listeners when the components unmounts\n\n  useEffect(() => removeListeners, []);\n  return [ref, bounds, forceRefresh];\n} // Adds native resize listener to window\n\n\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(() => {\n    const cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return () => void window.removeEventListener('resize', cb);\n  }, [onWindowResize]);\n}\n\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(() => {\n    if (enabled) {\n      const cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return () => void window.removeEventListener('scroll', cb, true);\n    }\n  }, [onScroll, enabled]);\n} // Returns a list of scroll offsets\n\n\nfunction findScrollContainers(element) {\n  const result = [];\n  if (!element || element === document.body) return result;\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = window.getComputedStyle(element);\n  if ([overflow, overflowX, overflowY].some(prop => prop === 'auto' || prop === 'scroll')) result.push(element);\n  return [...result, ...findScrollContainers(element.parentElement)];\n} // Checks if element boundaries are equal\n\n\nconst keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\n\nconst areBoundsEqual = (a, b) => keys.every(key => a[key] === b[key]);\n\nexport { useMeasure as default };","map":{"version":3,"names":["useState","useRef","useEffect","useMemo","createDebounce","useMeasure","_temp","debounce","scroll","polyfill","offsetSize","ResizeObserver","window","Error","bounds","set","left","top","width","height","bottom","right","x","y","state","element","scrollContainers","resizeObserver","lastBounds","scrollDebounce","resizeDebounce","resize","mounted","current","forceRefresh","resizeChange","scrollChange","callback","getBoundingClientRect","size","HTMLElement","offsetHeight","offsetWidth","Object","freeze","areBoundsEqual","removeListeners","forEach","removeEventListener","disconnect","addListeners","observe","scrollContainer","addEventListener","capture","passive","ref","node","findScrollContainers","useOnWindowScroll","Boolean","useOnWindowResize","onWindowResize","cb","onScroll","enabled","result","document","body","overflow","overflowX","overflowY","getComputedStyle","some","prop","push","parentElement","keys","a","b","every","key","default"],"sources":["/home/kevin/R3F-Sandbox/42-first-r3f-application/node_modules/react-use-measure/dist/web.js"],"sourcesContent":["import { useState, useRef, useEffect, useMemo } from 'react';\nimport createDebounce from 'debounce';\n\nfunction useMeasure(_temp) {\n  let {\n    debounce,\n    scroll,\n    polyfill,\n    offsetSize\n  } = _temp === void 0 ? {\n    debounce: 0,\n    scroll: false,\n    offsetSize: false\n  } : _temp;\n  const ResizeObserver = polyfill || (typeof window === 'undefined' ? class ResizeObserver {} : window.ResizeObserver);\n\n  if (!ResizeObserver) {\n    throw new Error('This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills');\n  }\n\n  const [bounds, set] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    bottom: 0,\n    right: 0,\n    x: 0,\n    y: 0\n  }); // keep all state in a ref\n\n  const state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  }); // set actual debounce values early, so effects know if they should react accordingly\n\n  const scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  const resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null; // make sure to update state only as long as the component is truly mounted\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => void (mounted.current = false);\n  }); // memoize handlers, so event-listeners know when they should update\n\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\n    const callback = () => {\n      if (!state.current.element) return;\n      const {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      } = state.current.element.getBoundingClientRect();\n      const size = {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      };\n\n      if (state.current.element instanceof HTMLElement && offsetSize) {\n        size.height = state.current.element.offsetHeight;\n        size.width = state.current.element.offsetWidth;\n      }\n\n      Object.freeze(size);\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n    };\n\n    return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n  }, [set, offsetSize, scrollDebounce, resizeDebounce]); // cleanup current scroll-listeners / observers\n\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(element => element.removeEventListener('scroll', scrollChange, true));\n      state.current.scrollContainers = null;\n    }\n\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  } // add scroll-listeners / observers\n\n\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(scrollContainer => scrollContainer.addEventListener('scroll', scrollChange, {\n        capture: true,\n        passive: true\n      }));\n    }\n  } // the ref we expose to the user\n\n\n  const ref = node => {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  }; // add general event listeners\n\n\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange); // respond to changes that are relevant for the listeners\n\n  useEffect(() => {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]); // remove all listeners when the components unmounts\n\n  useEffect(() => removeListeners, []);\n  return [ref, bounds, forceRefresh];\n} // Adds native resize listener to window\n\n\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(() => {\n    const cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return () => void window.removeEventListener('resize', cb);\n  }, [onWindowResize]);\n}\n\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(() => {\n    if (enabled) {\n      const cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return () => void window.removeEventListener('scroll', cb, true);\n    }\n  }, [onScroll, enabled]);\n} // Returns a list of scroll offsets\n\n\nfunction findScrollContainers(element) {\n  const result = [];\n  if (!element || element === document.body) return result;\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = window.getComputedStyle(element);\n  if ([overflow, overflowX, overflowY].some(prop => prop === 'auto' || prop === 'scroll')) result.push(element);\n  return [...result, ...findScrollContainers(element.parentElement)];\n} // Checks if element boundaries are equal\n\n\nconst keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\n\nconst areBoundsEqual = (a, b) => keys.every(key => a[key] === b[key]);\n\nexport { useMeasure as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}